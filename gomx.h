/* gomx.h generated by valac, the Vala compiler, do not modify */


#ifndef __GOMX_H__
#define __GOMX_H__

#include <glib.h>
#include <stdlib.h>
#include <string.h>
#include <glib-object.h>
#include <omx.h>
#include <gmodule.h>
#include <stdio.h>

G_BEGIN_DECLS


#define GOMX_TYPE_CORE (gomx_core_get_type ())
#define GOMX_CORE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_CORE, GOmxCore))
#define GOMX_CORE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_CORE, GOmxCoreClass))
#define GOMX_IS_CORE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_CORE))
#define GOMX_IS_CORE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_CORE))
#define GOMX_CORE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_CORE, GOmxCoreClass))

typedef struct _GOmxCore GOmxCore;
typedef struct _GOmxCoreClass GOmxCoreClass;
typedef struct _GOmxCorePrivate GOmxCorePrivate;

#define GOMX_TYPE_ENGINE (gomx_engine_get_type ())
#define GOMX_ENGINE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_ENGINE, GOmxEngine))
#define GOMX_ENGINE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_ENGINE, GOmxEngineClass))
#define GOMX_IS_ENGINE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_ENGINE))
#define GOMX_IS_ENGINE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_ENGINE))
#define GOMX_ENGINE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_ENGINE, GOmxEngineClass))

typedef struct _GOmxEngine GOmxEngine;
typedef struct _GOmxEngineClass GOmxEngineClass;
typedef struct _GOmxEnginePrivate GOmxEnginePrivate;

#define GOMX_TYPE_COMPONENT (gomx_component_get_type ())
#define GOMX_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_COMPONENT, GOmxComponent))
#define GOMX_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_COMPONENT, GOmxComponentClass))
#define GOMX_IS_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_COMPONENT))
#define GOMX_IS_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_COMPONENT))
#define GOMX_COMPONENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_COMPONENT, GOmxComponentClass))

typedef struct _GOmxComponent GOmxComponent;
typedef struct _GOmxComponentClass GOmxComponentClass;

#define GOMX_TYPE_COMPONENT_LIST (gomx_component_list_get_type ())
#define GOMX_COMPONENT_LIST(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_COMPONENT_LIST, GOmxComponentList))
#define GOMX_COMPONENT_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_COMPONENT_LIST, GOmxComponentListClass))
#define GOMX_IS_COMPONENT_LIST(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_COMPONENT_LIST))
#define GOMX_IS_COMPONENT_LIST_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_COMPONENT_LIST))
#define GOMX_COMPONENT_LIST_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_COMPONENT_LIST, GOmxComponentListClass))

typedef struct _GOmxComponentList GOmxComponentList;
typedef struct _GOmxComponentListClass GOmxComponentListClass;

#define GOMX_TYPE_PORT_DONE_QUEUE (gomx_port_done_queue_get_type ())
#define GOMX_PORT_DONE_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_PORT_DONE_QUEUE, GOmxPortDoneQueue))
#define GOMX_PORT_DONE_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_PORT_DONE_QUEUE, GOmxPortDoneQueueClass))
#define GOMX_IS_PORT_DONE_QUEUE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_PORT_DONE_QUEUE))
#define GOMX_IS_PORT_DONE_QUEUE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_PORT_DONE_QUEUE))
#define GOMX_PORT_DONE_QUEUE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_PORT_DONE_QUEUE, GOmxPortDoneQueueClass))

typedef struct _GOmxPortDoneQueue GOmxPortDoneQueue;
typedef struct _GOmxPortDoneQueueClass GOmxPortDoneQueueClass;
typedef struct _GOmxComponentListPrivate GOmxComponentListPrivate;

#define GOMX_COMPONENT_LIST_TYPE_ITERATOR (gomx_component_list_iterator_get_type ())
#define GOMX_COMPONENT_LIST_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_COMPONENT_LIST_TYPE_ITERATOR, GOmxComponentListIterator))
#define GOMX_COMPONENT_LIST_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_COMPONENT_LIST_TYPE_ITERATOR, GOmxComponentListIteratorClass))
#define GOMX_COMPONENT_LIST_IS_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_COMPONENT_LIST_TYPE_ITERATOR))
#define GOMX_COMPONENT_LIST_IS_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_COMPONENT_LIST_TYPE_ITERATOR))
#define GOMX_COMPONENT_LIST_ITERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_COMPONENT_LIST_TYPE_ITERATOR, GOmxComponentListIteratorClass))

typedef struct _GOmxComponentListIterator GOmxComponentListIterator;
typedef struct _GOmxComponentListIteratorClass GOmxComponentListIteratorClass;
typedef struct _GOmxComponentListIteratorPrivate GOmxComponentListIteratorPrivate;
typedef struct _GOmxPortDoneQueuePrivate GOmxPortDoneQueuePrivate;

#define GOMX_PORT_DONE_QUEUE_TYPE_ITERATOR (gomx_port_done_queue_iterator_get_type ())
#define GOMX_PORT_DONE_QUEUE_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_PORT_DONE_QUEUE_TYPE_ITERATOR, GOmxPortDoneQueueIterator))
#define GOMX_PORT_DONE_QUEUE_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_PORT_DONE_QUEUE_TYPE_ITERATOR, GOmxPortDoneQueueIteratorClass))
#define GOMX_PORT_DONE_QUEUE_IS_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_PORT_DONE_QUEUE_TYPE_ITERATOR))
#define GOMX_PORT_DONE_QUEUE_IS_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_PORT_DONE_QUEUE_TYPE_ITERATOR))
#define GOMX_PORT_DONE_QUEUE_ITERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_PORT_DONE_QUEUE_TYPE_ITERATOR, GOmxPortDoneQueueIteratorClass))

typedef struct _GOmxPortDoneQueueIterator GOmxPortDoneQueueIterator;
typedef struct _GOmxPortDoneQueueIteratorClass GOmxPortDoneQueueIteratorClass;

#define GOMX_TYPE_PORT (gomx_port_get_type ())
#define GOMX_PORT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_PORT, GOmxPort))
#define GOMX_PORT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_PORT, GOmxPortClass))
#define GOMX_IS_PORT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_PORT))
#define GOMX_IS_PORT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_PORT))
#define GOMX_PORT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_PORT, GOmxPortClass))

typedef struct _GOmxPort GOmxPort;
typedef struct _GOmxPortClass GOmxPortClass;
typedef struct _GOmxPortDoneQueueIteratorPrivate GOmxPortDoneQueueIteratorPrivate;
typedef struct _GOmxComponentPrivate GOmxComponentPrivate;

#define GOMX_TYPE_AUDIO_COMPONENT (gomx_audio_component_get_type ())
#define GOMX_AUDIO_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_AUDIO_COMPONENT, GOmxAudioComponent))
#define GOMX_AUDIO_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_AUDIO_COMPONENT, GOmxAudioComponentClass))
#define GOMX_IS_AUDIO_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_AUDIO_COMPONENT))
#define GOMX_IS_AUDIO_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_AUDIO_COMPONENT))
#define GOMX_AUDIO_COMPONENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_AUDIO_COMPONENT, GOmxAudioComponentClass))

typedef struct _GOmxAudioComponent GOmxAudioComponent;
typedef struct _GOmxAudioComponentClass GOmxAudioComponentClass;
typedef struct _GOmxAudioComponentPrivate GOmxAudioComponentPrivate;

#define GOMX_TYPE_IMAGE_COMPONENT (gomx_image_component_get_type ())
#define GOMX_IMAGE_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_IMAGE_COMPONENT, GOmxImageComponent))
#define GOMX_IMAGE_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_IMAGE_COMPONENT, GOmxImageComponentClass))
#define GOMX_IS_IMAGE_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_IMAGE_COMPONENT))
#define GOMX_IS_IMAGE_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_IMAGE_COMPONENT))
#define GOMX_IMAGE_COMPONENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_IMAGE_COMPONENT, GOmxImageComponentClass))

typedef struct _GOmxImageComponent GOmxImageComponent;
typedef struct _GOmxImageComponentClass GOmxImageComponentClass;
typedef struct _GOmxImageComponentPrivate GOmxImageComponentPrivate;

#define GOMX_TYPE_VIDEO_COMPONENT (gomx_video_component_get_type ())
#define GOMX_VIDEO_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_VIDEO_COMPONENT, GOmxVideoComponent))
#define GOMX_VIDEO_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_VIDEO_COMPONENT, GOmxVideoComponentClass))
#define GOMX_IS_VIDEO_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_VIDEO_COMPONENT))
#define GOMX_IS_VIDEO_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_VIDEO_COMPONENT))
#define GOMX_VIDEO_COMPONENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_VIDEO_COMPONENT, GOmxVideoComponentClass))

typedef struct _GOmxVideoComponent GOmxVideoComponent;
typedef struct _GOmxVideoComponentClass GOmxVideoComponentClass;
typedef struct _GOmxVideoComponentPrivate GOmxVideoComponentPrivate;

#define GOMX_TYPE_OTHER_COMPONENT (gomx_other_component_get_type ())
#define GOMX_OTHER_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_OTHER_COMPONENT, GOmxOtherComponent))
#define GOMX_OTHER_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_OTHER_COMPONENT, GOmxOtherComponentClass))
#define GOMX_IS_OTHER_COMPONENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_OTHER_COMPONENT))
#define GOMX_IS_OTHER_COMPONENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_OTHER_COMPONENT))
#define GOMX_OTHER_COMPONENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_OTHER_COMPONENT, GOmxOtherComponentClass))

typedef struct _GOmxOtherComponent GOmxOtherComponent;
typedef struct _GOmxOtherComponentClass GOmxOtherComponentClass;
typedef struct _GOmxOtherComponentPrivate GOmxOtherComponentPrivate;

#define GOMX_TYPE_PORT_ARRAY (gomx_port_array_get_type ())
#define GOMX_PORT_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_PORT_ARRAY, GOmxPortArray))
#define GOMX_PORT_ARRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_PORT_ARRAY, GOmxPortArrayClass))
#define GOMX_IS_PORT_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_PORT_ARRAY))
#define GOMX_IS_PORT_ARRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_PORT_ARRAY))
#define GOMX_PORT_ARRAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_PORT_ARRAY, GOmxPortArrayClass))

typedef struct _GOmxPortArray GOmxPortArray;
typedef struct _GOmxPortArrayClass GOmxPortArrayClass;
typedef struct _GOmxPortArrayPrivate GOmxPortArrayPrivate;

#define GOMX_PORT_ARRAY_TYPE_ITERATOR (gomx_port_array_iterator_get_type ())
#define GOMX_PORT_ARRAY_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_PORT_ARRAY_TYPE_ITERATOR, GOmxPortArrayIterator))
#define GOMX_PORT_ARRAY_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_PORT_ARRAY_TYPE_ITERATOR, GOmxPortArrayIteratorClass))
#define GOMX_PORT_ARRAY_IS_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_PORT_ARRAY_TYPE_ITERATOR))
#define GOMX_PORT_ARRAY_IS_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_PORT_ARRAY_TYPE_ITERATOR))
#define GOMX_PORT_ARRAY_ITERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_PORT_ARRAY_TYPE_ITERATOR, GOmxPortArrayIteratorClass))

typedef struct _GOmxPortArrayIterator GOmxPortArrayIterator;
typedef struct _GOmxPortArrayIteratorClass GOmxPortArrayIteratorClass;
typedef struct _GOmxPortArrayIteratorPrivate GOmxPortArrayIteratorPrivate;
typedef struct _GOmxPortPrivate GOmxPortPrivate;

#define GOMX_TYPE_BUFFER_ARRAY (gomx_buffer_array_get_type ())
#define GOMX_BUFFER_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_TYPE_BUFFER_ARRAY, GOmxBufferArray))
#define GOMX_BUFFER_ARRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_TYPE_BUFFER_ARRAY, GOmxBufferArrayClass))
#define GOMX_IS_BUFFER_ARRAY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_TYPE_BUFFER_ARRAY))
#define GOMX_IS_BUFFER_ARRAY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_TYPE_BUFFER_ARRAY))
#define GOMX_BUFFER_ARRAY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_TYPE_BUFFER_ARRAY, GOmxBufferArrayClass))

typedef struct _GOmxBufferArray GOmxBufferArray;
typedef struct _GOmxBufferArrayClass GOmxBufferArrayClass;
typedef struct _GOmxBufferArrayPrivate GOmxBufferArrayPrivate;

#define GOMX_BUFFER_ARRAY_TYPE_ITERATOR (gomx_buffer_array_iterator_get_type ())
#define GOMX_BUFFER_ARRAY_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), GOMX_BUFFER_ARRAY_TYPE_ITERATOR, GOmxBufferArrayIterator))
#define GOMX_BUFFER_ARRAY_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), GOMX_BUFFER_ARRAY_TYPE_ITERATOR, GOmxBufferArrayIteratorClass))
#define GOMX_BUFFER_ARRAY_IS_ITERATOR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), GOMX_BUFFER_ARRAY_TYPE_ITERATOR))
#define GOMX_BUFFER_ARRAY_IS_ITERATOR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), GOMX_BUFFER_ARRAY_TYPE_ITERATOR))
#define GOMX_BUFFER_ARRAY_ITERATOR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), GOMX_BUFFER_ARRAY_TYPE_ITERATOR, GOmxBufferArrayIteratorClass))

typedef struct _GOmxBufferArrayIterator GOmxBufferArrayIterator;
typedef struct _GOmxBufferArrayIteratorClass GOmxBufferArrayIteratorClass;
typedef struct _GOmxBufferArrayIteratorPrivate GOmxBufferArrayIteratorPrivate;

typedef enum  {
	GOMX_ERROR_None,
	GOMX_ERROR_InsufficientResources,
	GOMX_ERROR_Undefined,
	GOMX_ERROR_InvalidComponentName,
	GOMX_ERROR_ComponentNotFound,
	GOMX_ERROR_InvalidComponent,
	GOMX_ERROR_BadParameter,
	GOMX_ERROR_NotImplemented,
	GOMX_ERROR_Underflow,
	GOMX_ERROR_Overflow,
	GOMX_ERROR_Hardware,
	GOMX_ERROR_InvalidState,
	GOMX_ERROR_StreamCorrupt,
	GOMX_ERROR_PortsNotCompatible,
	GOMX_ERROR_ResourcesLost,
	GOMX_ERROR_NoMore,
	GOMX_ERROR_VersionMismatch,
	GOMX_ERROR_NotReady,
	GOMX_ERROR_Timeout,
	GOMX_ERROR_SameState,
	GOMX_ERROR_ResourcesPreempted,
	GOMX_ERROR_PortUnresponsiveDuringAllocation,
	GOMX_ERROR_PortUnresponsiveDuringDeallocation,
	GOMX_ERROR_PortUnresponsiveDuringStop,
	GOMX_ERROR_IncorrectStateTransition,
	GOMX_ERROR_IncorrectStateOperation,
	GOMX_ERROR_UnsupportedSetting,
	GOMX_ERROR_UnsupportedIndex,
	GOMX_ERROR_BadPortIndex,
	GOMX_ERROR_PortUnpopulated,
	GOMX_ERROR_ComponentSuspended,
	GOMX_ERROR_DynamicResourcesUnavailable,
	GOMX_ERROR_MbErrorsInFrame,
	GOMX_ERROR_FormatNotDetected,
	GOMX_ERROR_ContentPipeOpenFailed,
	GOMX_ERROR_ContentPipeCreationFailed,
	GOMX_ERROR_SeparateTablesUsed,
	GOMX_ERROR_TunnelingUnsupported
} GOmxError;
#define GOMX_ERROR gomx_error_quark ()
struct _GOmxCore {
	GObject parent_instance;
	GOmxCorePrivate * priv;
};

struct _GOmxCoreClass {
	GObjectClass parent_class;
};

typedef OMX_ERRORTYPE (*GOmxCoreInitFunc) (void* user_data);
typedef OMX_ERRORTYPE (*GOmxCoreDeinitFunc) (void* user_data);
typedef OMX_ERRORTYPE (*GOmxCoreGetHandleFunc) (void** component, const char* component_name, void* app_data, OMX_CALLBACKTYPE* callbacks, void* user_data);
typedef OMX_ERRORTYPE (*GOmxCoreFreeHandleFunc) (void* handle, void* user_data);
typedef OMX_ERRORTYPE (*GOmxCoreSetupTunnelFunc) (void* output, guint32 port_output, void* input, guint32 port_input, void* user_data);
struct _GOmxEngine {
	GObject parent_instance;
	GOmxEnginePrivate * priv;
};

struct _GOmxEngineClass {
	GObjectClass parent_class;
	void (*add_component) (GOmxEngine* self, GOmxComponent* component);
};

struct _GOmxComponentList {
	GObject parent_instance;
	GOmxComponentListPrivate * priv;
};

struct _GOmxComponentListClass {
	GObjectClass parent_class;
};

struct _GOmxComponentListIterator {
	GObject parent_instance;
	GOmxComponentListIteratorPrivate * priv;
};

struct _GOmxComponentListIteratorClass {
	GObjectClass parent_class;
};

struct _GOmxPortDoneQueue {
	GObject parent_instance;
	GOmxPortDoneQueuePrivate * priv;
};

struct _GOmxPortDoneQueueClass {
	GObjectClass parent_class;
};

struct _GOmxPortDoneQueueIterator {
	GObject parent_instance;
	GOmxPortDoneQueueIteratorPrivate * priv;
};

struct _GOmxPortDoneQueueIteratorClass {
	GObjectClass parent_class;
};

struct _GOmxComponent {
	GObject parent_instance;
	GOmxComponentPrivate * priv;
	guint id;
};

struct _GOmxComponentClass {
	GObjectClass parent_class;
	void (*init) (GOmxComponent* self, GError** error);
	void (*allocate_ports) (GOmxComponent* self, GError** error);
	void (*set_role) (GOmxComponent* self, const char* component_role);
	void (*free_handle) (GOmxComponent* self, GError** error);
	void (*allocate_buffers) (GOmxComponent* self, GError** error);
	void (*free_buffers) (GOmxComponent* self, GError** error);
	void (*buffers_begin_transfer) (GOmxComponent* self, GError** error);
	void (*set_state) (GOmxComponent* self, OMX_STATETYPE state, GError** error);
	OMX_STATETYPE (*get_state) (GOmxComponent* self, GError** error);
};

struct _GOmxAudioComponent {
	GOmxComponent parent_instance;
	GOmxAudioComponentPrivate * priv;
};

struct _GOmxAudioComponentClass {
	GOmxComponentClass parent_class;
};

struct _GOmxImageComponent {
	GOmxComponent parent_instance;
	GOmxImageComponentPrivate * priv;
};

struct _GOmxImageComponentClass {
	GOmxComponentClass parent_class;
};

struct _GOmxVideoComponent {
	GOmxComponent parent_instance;
	GOmxVideoComponentPrivate * priv;
};

struct _GOmxVideoComponentClass {
	GOmxComponentClass parent_class;
};

struct _GOmxOtherComponent {
	GOmxComponent parent_instance;
	GOmxOtherComponentPrivate * priv;
};

struct _GOmxOtherComponentClass {
	GOmxComponentClass parent_class;
};

typedef void (*GOmxComponentEventFunc) (GOmxComponent* component, guint data1, guint data2, void* event_data, void* user_data);
struct _GOmxPortArray {
	GObject parent_instance;
	GOmxPortArrayPrivate * priv;
};

struct _GOmxPortArrayClass {
	GObjectClass parent_class;
};

struct _GOmxPortArrayIterator {
	GObject parent_instance;
	GOmxPortArrayIteratorPrivate * priv;
};

struct _GOmxPortArrayIteratorClass {
	GObjectClass parent_class;
};

struct _GOmxPort {
	GObject parent_instance;
	GOmxPortPrivate * priv;
};

struct _GOmxPortClass {
	GObjectClass parent_class;
};

typedef void (*GOmxPortBufferDoneFunc) (GOmxPort* port, OMX_BUFFERHEADERTYPE* buffer, void* user_data);
struct _GOmxBufferArray {
	GObject parent_instance;
	GOmxBufferArrayPrivate * priv;
	OMX_BUFFERHEADERTYPE** array;
	gint array_length1;
	gint array_size;
};

struct _GOmxBufferArrayClass {
	GObjectClass parent_class;
};

struct _GOmxBufferArrayIterator {
	GObject parent_instance;
	GOmxBufferArrayIteratorPrivate * priv;
};

struct _GOmxBufferArrayIteratorClass {
	GObjectClass parent_class;
};


GType gomx_core_get_type (void);
GQuark gomx_error_quark (void);
GOmxCore* gomx_load_library (const char* library_name, GError** error);
void gomx_core_init (GOmxCore* self, GError** error);
void gomx_core_deinit (GOmxCore* self, GError** error);
void gomx_core_get_handle (GOmxCore* self, void** component, const char* component_name, void* app_data, OMX_CALLBACKTYPE* callbacks, GError** error);
void gomx_core_free_handle (GOmxCore* self, void* handle, GError** error);
void gomx_core_setup_tunnel (GOmxCore* self, void* output, guint32 port_output, void* input, guint32 port_input, GError** error);
GOmxCore* gomx_core_open (const char* soname, GError** error);
GOmxCore* gomx_core_new (void);
GOmxCore* gomx_core_construct (GType object_type);
GModule* gomx_core_get_module (GOmxCore* self);
GType gomx_engine_get_type (void);
GType gomx_component_get_type (void);
void gomx_engine_add_component (GOmxEngine* self, GOmxComponent* component);
GOmxComponent* gomx_engine_get (GOmxEngine* self, const char* name);
gboolean gomx_engine_contains (GOmxEngine* self, const char* name);
GOmxEngine* gomx_engine_new (void);
GOmxEngine* gomx_engine_construct (GType object_type);
GType gomx_component_list_get_type (void);
GOmxComponentList* gomx_engine_get_components (GOmxEngine* self);
GType gomx_port_done_queue_get_type (void);
GOmxPortDoneQueue* gomx_engine_get_ports_with_buffer_done (GOmxEngine* self);
void gomx_component_list_add (GOmxComponentList* self, GOmxComponent* component);
GType gomx_component_list_iterator_get_type (void);
GOmxComponentListIterator* gomx_component_list_iterator (GOmxComponentList* self);
void gomx_component_list_init (GOmxComponentList* self, GError** error);
void gomx_component_list_set_state (GOmxComponentList* self, OMX_STATETYPE state, GError** error);
void gomx_component_list_set_state_and_wait (GOmxComponentList* self, OMX_STATETYPE state, GError** error);
void gomx_component_list_wait_for_state_set (GOmxComponentList* self);
void gomx_component_list_buffers_begin_transfer (GOmxComponentList* self, GError** error);
void gomx_component_list_free_handles (GOmxComponentList* self, GError** error);
GOmxComponent* gomx_component_list_get (GOmxComponentList* self, guint index);
GOmxComponentList* gomx_component_list_new (void);
GOmxComponentList* gomx_component_list_construct (GType object_type);
guint gomx_component_list_get_length (GOmxComponentList* self);
GOmxComponentListIterator* gomx_component_list_iterator_new (GOmxComponentList* list);
GOmxComponentListIterator* gomx_component_list_iterator_construct (GType object_type, GOmxComponentList* list);
gboolean gomx_component_list_iterator_next (GOmxComponentListIterator* self);
GOmxComponent* gomx_component_list_iterator_get (GOmxComponentListIterator* self);
GType gomx_port_done_queue_iterator_get_type (void);
GOmxPortDoneQueueIterator* gomx_port_done_queue_iterator (GOmxPortDoneQueue* self);
GOmxPortDoneQueue* gomx_port_done_queue_new (void);
GOmxPortDoneQueue* gomx_port_done_queue_construct (GType object_type);
GType gomx_port_get_type (void);
GAsyncQueue* gomx_port_done_queue_get_queue (GOmxPortDoneQueue* self);
GOmxPortDoneQueueIterator* gomx_port_done_queue_iterator_new (GOmxPortDoneQueue* queue);
GOmxPortDoneQueueIterator* gomx_port_done_queue_iterator_construct (GType object_type, GOmxPortDoneQueue* queue);
gboolean gomx_port_done_queue_iterator_next (GOmxPortDoneQueueIterator* self);
GOmxPort* gomx_port_done_queue_iterator_get (GOmxPortDoneQueueIterator* self);
GType gomx_audio_component_get_type (void);
GOmxAudioComponent* gomx_audio_component_new (const char* name);
GOmxAudioComponent* gomx_audio_component_construct (GType object_type, const char* name);
GType gomx_image_component_get_type (void);
GOmxImageComponent* gomx_image_component_new (const char* name);
GOmxImageComponent* gomx_image_component_construct (GType object_type, const char* name);
GType gomx_video_component_get_type (void);
GOmxVideoComponent* gomx_video_component_new (const char* name);
GOmxVideoComponent* gomx_video_component_construct (GType object_type, const char* name);
GType gomx_other_component_get_type (void);
GOmxOtherComponent* gomx_other_component_new (const char* name);
GOmxOtherComponent* gomx_other_component_construct (GType object_type, const char* name);
GOmxComponent* gomx_component_new (const char* name, OMX_INDEXTYPE index);
GOmxComponent* gomx_component_construct (GType object_type, const char* name, OMX_INDEXTYPE index);
void gomx_component_init (GOmxComponent* self, GError** error);
void gomx_component_allocate_ports (GOmxComponent* self, GError** error);
void gomx_component_set_role (GOmxComponent* self, const char* component_role);
void gomx_component_free_handle (GOmxComponent* self, GError** error);
void gomx_component_allocate_buffers (GOmxComponent* self, GError** error);
void gomx_component_free_buffers (GOmxComponent* self, GError** error);
void gomx_component_buffers_begin_transfer (GOmxComponent* self, GError** error);
void gomx_component_wait_for_state (GOmxComponent* self);
void gomx_component_wait_for_port (GOmxComponent* self);
void gomx_component_wait_for_flush (GOmxComponent* self);
void gomx_component_set_state (GOmxComponent* self, OMX_STATETYPE state, GError** error);
OMX_ERRORTYPE gomx_component_can_set_state (GOmxComponent* self, OMX_STATETYPE next_state);
void gomx_component_set_state_and_wait (GOmxComponent* self, OMX_STATETYPE state, GError** error);
OMX_STATETYPE gomx_component_get_state (GOmxComponent* self, GError** error);
void gomx_component_event_set_function (GOmxComponent* self, OMX_EVENTTYPE event, GOmxComponentEventFunc event_function, void* event_function_target);
const char* gomx_component_get_name (GOmxComponent* self);
void gomx_component_set_name (GOmxComponent* self, const char* value);
void* gomx_component_get_handle (GOmxComponent* self);
GType gomx_port_array_get_type (void);
GOmxPortArray* gomx_component_get_ports (GOmxComponent* self);
GAsyncQueue* gomx_component_get_queue (GOmxComponent* self);
void gomx_component_set_queue (GOmxComponent* self, GAsyncQueue* value);
GOmxCore* gomx_component_get_core (GOmxComponent* self);
guint gomx_component_get_init_index (GOmxComponent* self);
void gomx_component_set_init_index (GOmxComponent* self, guint value);
const char* gomx_component_get_library_name (GOmxComponent* self);
void gomx_component_set_library_name (GOmxComponent* self, const char* value);
const char* gomx_component_get_component_name (GOmxComponent* self);
void gomx_component_set_component_name (GOmxComponent* self, const char* value);
const char* gomx_component_get_component_role (GOmxComponent* self);
void gomx_component_set_component_role (GOmxComponent* self, const char* value);
OMX_STATETYPE gomx_component_get_current_state (GOmxComponent* self);
OMX_STATETYPE gomx_component_get_pending_state (GOmxComponent* self);
OMX_STATETYPE gomx_component_get_previous_state (GOmxComponent* self);
gboolean gomx_component_get_no_allocate_buffers (GOmxComponent* self);
void gomx_component_set_no_allocate_buffers (GOmxComponent* self, gboolean value);
guint gomx_component_get_n_ports (GOmxComponent* self);
GOmxPortArray* gomx_port_array_new (guint length, guint start);
GOmxPortArray* gomx_port_array_construct (GType object_type, guint length, guint start);
GType gomx_port_array_iterator_get_type (void);
GOmxPortArrayIterator* gomx_port_array_iterator (GOmxPortArray* self);
GOmxPort* gomx_port_array_get (GOmxPortArray* self, guint index);
void gomx_port_array_set (GOmxPortArray* self, guint index, GOmxPort* port);
guint gomx_port_array_get_start (GOmxPortArray* self);
void gomx_port_array_set_start (GOmxPortArray* self, guint value);
guint gomx_port_array_get_length (GOmxPortArray* self);
void gomx_port_array_set_length (GOmxPortArray* self, guint value);
GOmxPortArrayIterator* gomx_port_array_iterator_new (GOmxPortArray* array);
GOmxPortArrayIterator* gomx_port_array_iterator_construct (GType object_type, GOmxPortArray* array);
gboolean gomx_port_array_iterator_next (GOmxPortArrayIterator* self);
GOmxPort* gomx_port_array_iterator_get (GOmxPortArrayIterator* self);
GOmxPort* gomx_port_new (GOmxComponent* component, guint index);
GOmxPort* gomx_port_construct (GType object_type, GOmxComponent* component, guint index);
void gomx_port_init (GOmxPort* self, GError** error);
OMX_PARAM_PORTDEFINITIONTYPE* gomx_port_get_definition (GOmxPort* self, GError** error);
void gomx_port_set_definition (GOmxPort* self, GError** error);
void gomx_port_allocate_buffers (GOmxPort* self, GError** error);
void gomx_port_free_buffers (GOmxPort* self, GError** error);
void gomx_port_get_parameter (GOmxPort* self, guint32 param_index, OmxPortStructure* param, GError** error);
void gomx_port_set_parameter (GOmxPort* self, guint32 param_index, OmxPortStructure* param, GError** error);
void gomx_port_setup_tunnel_with_port (GOmxPort* self, GOmxPort* port, GError** error);
void gomx_port_use_buffers_of_port (GOmxPort* self, GOmxPort* port, GError** error);
void gomx_port_enable (GOmxPort* self, GError** error);
void gomx_port_disable (GOmxPort* self, GError** error);
void gomx_port_flush (GOmxPort* self, GError** error);
OMX_BUFFERHEADERTYPE* gomx_port_pop_buffer (GOmxPort* self);
void gomx_port_push_buffer (GOmxPort* self, OMX_BUFFERHEADERTYPE* buffer, GError** error);
void gomx_port_set_buffer_done_function (GOmxPort* self, GOmxPortBufferDoneFunc buffer_done_func, void* buffer_done_func_target);
void gomx_port_buffers_begin_transfer (GOmxPort* self, GError** error);
const char* gomx_port_get_name (GOmxPort* self);
void gomx_port_set_name (GOmxPort* self, const char* value);
GOmxComponent* gomx_port_get_component (GOmxPort* self);
void gomx_port_set_component (GOmxPort* self, GOmxComponent* value);
GOmxPort* gomx_port_get_supplier (GOmxPort* self);
GType gomx_buffer_array_get_type (void);
GOmxBufferArray* gomx_port_get_buffers (GOmxPort* self);
guint gomx_port_get_index (GOmxPort* self);
void gomx_port_set_index (GOmxPort* self, guint value);
gboolean gomx_port_get_is_input (GOmxPort* self);
gboolean gomx_port_get_is_output (GOmxPort* self);
gboolean gomx_port_get_enabled (GOmxPort* self);
gboolean gomx_port_get_populated (GOmxPort* self);
OMX_PORTDOMAINTYPE gomx_port_get_domain (GOmxPort* self);
gboolean gomx_port_get_eos (GOmxPort* self);
GAsyncQueue* gomx_port_get_queue (GOmxPort* self);
guint gomx_port_get_n_buffers (GOmxPort* self);
void gomx_port_set_n_buffers (GOmxPort* self, guint value);
guint gomx_port_get_n_min_buffers (GOmxPort* self);
guint gomx_port_get_buffer_size (GOmxPort* self);
GOmxBufferArray* gomx_buffer_array_new (guint length);
GOmxBufferArray* gomx_buffer_array_construct (GType object_type, guint length);
GType gomx_buffer_array_iterator_get_type (void);
GOmxBufferArrayIterator* gomx_buffer_array_iterator (GOmxBufferArray* self);
OMX_BUFFERHEADERTYPE* gomx_buffer_array_get (GOmxBufferArray* self, guint index);
guint gomx_buffer_array_get_length (GOmxBufferArray* self);
void gomx_buffer_array_set_length (GOmxBufferArray* self, guint value);
GOmxBufferArrayIterator* gomx_buffer_array_iterator_new (GOmxBufferArray* array);
GOmxBufferArrayIterator* gomx_buffer_array_iterator_construct (GType object_type, GOmxBufferArray* array);
gboolean gomx_buffer_array_iterator_next (GOmxBufferArrayIterator* self);
OMX_BUFFERHEADERTYPE* gomx_buffer_array_iterator_get (GOmxBufferArrayIterator* self);
gboolean gomx_buffer_is_eos (OMX_BUFFERHEADERTYPE* buffer);
void gomx_buffer_set_eos (OMX_BUFFERHEADERTYPE* buffer);
void gomx_buffer_copy (OMX_BUFFERHEADERTYPE* dest, OMX_BUFFERHEADERTYPE* source);
void gomx_buffer_copy_len (OMX_BUFFERHEADERTYPE* dest, OMX_BUFFERHEADERTYPE* source);
void gomx_buffer_read_from_file (OMX_BUFFERHEADERTYPE* buffer, FILE* fs);
const char* gomx_command_to_string (OMX_COMMANDTYPE command);
const char* gomx_state_to_string (OMX_STATETYPE state);
const char* gomx_event_to_string (OMX_EVENTTYPE event);
const char* gomx_error_to_string (OMX_ERRORTYPE _error_);
void gomx_try_run (OMX_ERRORTYPE e, GError** error);


G_END_DECLS

#endif
